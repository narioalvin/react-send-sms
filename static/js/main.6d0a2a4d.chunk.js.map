{"version":3,"sources":["assets/img/mail.svg","assets/img/check.svg","App.js","index.js"],"names":["module","exports","MyVerticallyCenteredModal","props","Modal","size","aria-labelledby","centered","Body","width","src","check","alt","App","useState","message","setMessage","number","setNumber","sending","setSending","errorMessage","setErrorMessage","modalShow","setModalShow","className","mail","htmlFor","type","name","maxLength","onChange","event","target","value","placeholder","rows","cols","onClick","preventDefault","setTimeout","axios","post","then","response","window","location","reload","catch","error","data","sendMessage","show","onHide","ReactDOM","render","document","getElementById"],"mappings":"0GAAAA,EAAOC,QAAU,IAA0B,kC,mBCA3CD,EAAOC,QAAU,IAA0B,mC,iNCQ3C,SAASC,EAA0BC,GACjC,OACE,kBAACC,EAAA,EAAD,iBACMD,EADN,CAEEE,KAAK,KACLC,kBAAgB,gCAChBC,UAAQ,IAER,kBAACH,EAAA,EAAMI,KAAP,KACE,yBAAKC,MAAM,KAAKC,IAAKC,IAAOC,IAAI,KAChC,+CAqGOC,MA/Ff,WAAgB,IAAD,EACiBC,mBAAS,IAD1B,mBACNC,EADM,KACGC,EADH,OAEeF,mBAAS,IAFxB,mBAENG,EAFM,KAEEC,EAFF,OAGiBJ,oBAAS,GAH1B,mBAGNK,EAHM,KAGGC,EAHH,OAI2BN,mBAAS,IAJpC,mBAINO,EAJM,KAIQC,EAJR,OAKqBR,oBAAS,GAL9B,mBAKNS,EALM,KAKKC,EALL,KAuCb,OACE,yBAAKC,UAAU,OACb,yBAAKA,UAAU,iBACb,yBAAKA,UAAU,OACb,yBAAKhB,MAAM,MAAMC,IAAKgB,IAAMd,IAAI,MAElC,yDACA,yBAAKa,UAAU,aACb,2BAAOE,QAAQ,MAAf,MACA,2BACEC,KAAK,OACLC,KAAK,KACLC,UAAU,KACVC,SAAU,SAACC,GAAD,OAAWd,EAAUc,EAAMC,OAAOC,QAC5CC,YAAY,sBAIhB,yBAAKV,UAAU,aACb,2BAAOE,QAAQ,WAAf,WACA,8BACES,KAAK,IACLC,KAAK,KACLR,KAAK,UACLC,UAAU,MACVK,YAAY,2BACZJ,SAAU,SAACC,GAAD,OAAWhB,EAAWgB,EAAMC,OAAOC,UAE/C,qDAEgB,OAAjBb,EACC,0BAAMI,UAAU,iBAAiBJ,GAC/B,KACJ,yBAAKI,UAAU,iBACb,4BACEG,KAAK,SACLU,QAAS,SAACN,GAAD,MACK,KAAZjB,GAA6B,KAAXE,EACde,EAAMO,iBAtEF,SAACP,GACfb,EACFa,EAAMO,kBAENjB,EAAgB,IAEhBF,GAAW,GAEXoB,YAAW,WACTC,IACGC,KAAK,iDAAkD,CACtDzB,OAAQA,EACRF,QAASA,IAEV4B,MAAK,SAACC,GACLxB,GAAW,GAEXI,GAAa,GACbgB,YAAW,WACTK,OAAOC,SAASC,QAAO,GACvBvB,GAAa,KACZ,QAEJwB,OAAM,SAACC,GAGN,OAFA3B,EAAgB2B,EAAML,SAASM,MAC/B9B,GAAW,GACJ6B,OAEV,MA2CSE,CAAYnB,KALpB,OASGb,EAAU,yBAAKM,UAAU,YAAmB,QAKnD,kBAACvB,EAAD,CACEkD,KAAM7B,EACN8B,OAAQ,kBAAM7B,GAAa,QC7GnC8B,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.6d0a2a4d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/mail.da20cfba.svg\";","module.exports = __webpack_public_path__ + \"static/media/check.8b4d6e74.svg\";","import React, { useState } from 'react';\nimport axios from 'axios';\nimport mail from './assets/img/mail.svg';\nimport check from './assets/img/check.svg';\nimport Modal from 'react-bootstrap/Modal';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.scss';\n\nfunction MyVerticallyCenteredModal(props) {\n  return (\n    <Modal\n      {...props}\n      size=\"sm\"\n      aria-labelledby=\"contained-modal-title-vcenter\"\n      centered\n    >\n      <Modal.Body>\n        <img width=\"80\" src={check} alt=\"\" />\n        <h2>Message Sent!</h2>\n      </Modal.Body>\n    </Modal>\n  );\n}\n\nfunction App() {\n  const [message, setMessage] = useState('');\n  const [number, setNumber] = useState('');\n  const [sending, setSending] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('');\n  const [modalShow, setModalShow] = useState(false);\n\n  const sendMessage = (event) => {\n    if (sending) {\n      event.preventDefault();\n    } else {\n      setErrorMessage('');\n\n      setSending(true);\n\n      setTimeout(() => {\n        axios\n          .post('https://git.heroku.com/react-send-sms.git/send', {\n            number: number,\n            message: message,\n          })\n          .then((response) => {\n            setSending(false);\n\n            setModalShow(true);\n            setTimeout(() => {\n              window.location.reload(false);\n              setModalShow(false);\n            }, 2000);\n          })\n          .catch((error) => {\n            setErrorMessage(error.response.data);\n            setSending(false);\n            return error;\n          });\n      }, 2000);\n    }\n  };\n\n  return (\n    <div className=\"app\">\n      <div className=\"app-container\">\n        <div className=\"img\">\n          <img width=\"100\" src={mail} alt=\"\" />\n        </div>\n        <h2>Let me send that message!</h2>\n        <div className=\"input-box\">\n          <label htmlFor=\"to\">To</label>\n          <input\n            type=\"text\"\n            name=\"to\"\n            maxLength=\"12\"\n            onChange={(event) => setNumber(event.target.value)}\n            placeholder=\"ex: 639051234567\"\n          />\n        </div>\n\n        <div className=\"input-box\">\n          <label htmlFor=\"message\">Message</label>\n          <textarea\n            rows=\"6\"\n            cols=\"40\"\n            name=\"message\"\n            maxLength=\"160\"\n            placeholder=\"Type you message here...\"\n            onChange={(event) => setMessage(event.target.value)}\n          ></textarea>\n          <span>max 160 characters</span>\n        </div>\n        {errorMessage !== null ? (\n          <span className=\"error-message\">{errorMessage}</span>\n        ) : null}\n        <div className=\"btn-container\">\n          <button\n            type=\"submit\"\n            onClick={(event) =>\n              message === '' || number === ''\n                ? event.preventDefault()\n                : sendMessage(event)\n            }\n          >\n            SEND\n            {sending ? <div className=\"loader4\"></div> : null}\n          </button>\n        </div>\n      </div>\n\n      <MyVerticallyCenteredModal\n        show={modalShow}\n        onHide={() => setModalShow(false)}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}